@import './variables.scss';
@import './iconfont.css';

* {
  outline: none;
  box-sizing: border-box;
}
html {
  font-size: 16px;
  background-color: #f1f1f1;
}
body {
  margin: 0;
  color: map-get($colors, "gray");
  font-family: Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
a {
  color: inherit;
  text-decoration: none;
}

.clearfix:after,
.clearfix::before {
  content: '';
  display: table;
  clear: both;
}

.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
.vw-100 {
  width: 100vw;
}
.vh-100 {
  height: 100vh;
}

.float-left {
  float: left;
}
.float-right {
  float: right;
}

.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-warp {
  flex-wrap: wrap;
}
.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}

.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-normal {
  font-style: normal;
  font-weight: normal;
}

.border-radius {
  border-radius: .4rem;
}

@each $key, $value in $flex-justify {
  .justify-#{$key} {
    justify-content: $value;
  }
}
@each $key, $value in $flex-align {
  .align-#{$key} {
    align-items: $value;
  }
}

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}

@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}
@each $var in (top, bottom, middle, baseline) {
  .vertical-#{$var} {
    vertical-align: $var !important;
  }
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

.border {
  border: 1px solid $border-line-color
}
@each $var in (top, left, right, bottom) {
  .border-#{$var} {
    border-#{$var}: 1px solid $border-line-color
  }
}

@each $typeKey, $type in $spacing-types {
  // m-1 { margin: rem } 
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // mx-1 { margin-left,right: rem } my
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey}{
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey}{
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // mt-1 { margin-top: rem } 
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}